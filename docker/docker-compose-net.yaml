# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: "2.4"

volumes:
  orderer:
  peer0.dyno:
  peer1.dyno:
  peer2.dyno:


networks:
  dyno_blockchain_network:
    name: dyno_blockchain_network

services:
  orderer:
    container_name: orderer
    image: hyperledger/fabric-orderer:latest
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=1100
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=orderer-MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:11100
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../organizations/crypto-config/ordererOrganizations/orderer/config.orderers/msp:/var/hyperledger/orderer/msp
      - ../organizations/crypto-config/ordererOrganizations/orderer/config.orderers/tls/:/var/hyperledger/orderer/tls
      - orderer:/var/hyperledger/production/orderer
    ports:
      - 1100:1100
      - 11100:11100
    networks:
      - dyno_blockchain_network

  peer0.dyno:
    container_name: peer0.dyno
    image: hyperledger/fabric-peer:latest
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dyno_blockchain_network
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.dyno
      - CORE_PEER_ADDRESS=peer0.dyno:4444
      - CORE_PEER_LISTENADDRESS=0.0.0.0:4444
      - CORE_PEER_CHAINCODEADDRESS=peer0.dyno:4445
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:4445
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.dyno:4454
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.dyno:4444
      - CORE_PEER_LOCALMSPID=dyno-MSP
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:14444
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:4446
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer0.dyno/msp:/etc/hyperledger/fabric/msp
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer0.dyno/tls:/etc/hyperledger/fabric/tls
      - peer0.dyno:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 4444:4444
      - 14444:14444
    networks:
      - dyno_blockchain_network

  peer1.dyno:
    container_name: peer1.dyno
    image: hyperledger/fabric-peer:latest
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dyno_blockchain_network
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer1.dyno
      - CORE_PEER_ADDRESS=peer1.dyno:4454
      - CORE_PEER_LISTENADDRESS=0.0.0.0:4454
      - CORE_PEER_CHAINCODEADDRESS=peer1.dyno:4455
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:4455
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.dyno:4444
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.dyno:4454
      - CORE_PEER_LOCALMSPID=dyno-MSP
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:14454
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:4456
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer1.dyno/msp:/etc/hyperledger/fabric/msp
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer1.dyno/tls:/etc/hyperledger/fabric/tls
      - peer1.dyno:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 4454:4454
      - 14454:14454
    networks:
      - dyno_blockchain_network

  peer2.dyno:
    container_name: peer2.dyno
    image: hyperledger/fabric-peer:latest
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dyno_blockchain_network
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer2.dyno
      - CORE_PEER_ADDRESS=peer2.dyno:4464
      - CORE_PEER_LISTENADDRESS=0.0.0.0:4464
      - CORE_PEER_CHAINCODEADDRESS=peer2.dyno:4465
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:4465
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.dyno:4444
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.dyno:4464
      - CORE_PEER_LOCALMSPID=dyno-MSP
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:14464
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_PVTDATA_PUSHACKTIMEOUT=12s
      - CORE_PEER_EVENTS_ADDRESS=0.0.0.0:4466
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer2.dyno/msp:/etc/hyperledger/fabric/msp
      - ../organizations/crypto-config/peerOrganizations/dyno/peers/peer2.dyno/tls:/etc/hyperledger/fabric/tls
      - peer2.dyno:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 4464:4464
      - 14464:14464
    networks:
      - dyno_blockchain_network



  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    depends_on:
      - peer0.dyno
      - peer1.dyno
      - peer2.dyno
    networks:
      - dyno_blockchain_network




